https://blog.csdn.net/weixin_33972649/article/details/93300321
后退N帧协议的接受窗口为1，可以保证按序接受数据帧。
若采用n个比特对帧编号，则其发送窗口的尺寸应满足：1~2^(n-1)。
若发送窗口的尺寸大于2^(n-1)，则会造成接受方无法分辨新帧和旧帧。
原因:
    假设n取3,序号空间即0~7 （S:sender R:receiver）

1、S 发送了0,1,2,3,4,5,6 号帧
2、R 接受上述帧并且捎带发送 ACK6,但是丢失了
3、S的0号帧首先超时，S 重发发送0号帧
4、R收到0号帧，但是因为之前它已经接受0~6,发送了ACK6，它会认为0号帧是一个新的帧，
而在0号帧之前的一个7号帧丢失（注意这里是一个环的结构）。
因为是选择重传协议，R会接受0号帧( the old)作为新帧(暂时放在缓存区)，并通知S重发7号帧。
5、S 发送7号帧
6、R接受了7和0号帧，并且发送ACK0

     这就出现了问题

1、R接受错误的0号帧作为新的帧 
2、S在发送完7号帧之后收到了ACK0，而不是ACK7，此时对于S而言，它的0号帧早已在ACK6中确认。

   出现这个问题的主要原因是我们不能区别新旧帧，现在我们将序号空间一分为二，
首先发送0~3，继续上面的步骤。走到步骤4的时候R不会接受0作为新帧，因为R知道新的帧是4而不是0。
这样就避免了上面的问题。
